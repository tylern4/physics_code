#!/usr/bin/env python
from __future__ import print_function

import glob
import multiprocessing as mp
import sys
import time
from multiprocessing import Pool, cpu_count

from tqdm import tqdm
import skim

bar_format = b"{bar}" + b"{percentage:3.0f}%"


def parallel_skim(files):
    skimmed = files[:-5] + "_skim.root".encode("utf-8")
    skim.py_skim(files).basic()
    return skimmed


USAGE = """
{} /path/to/input/files/ output.root
"""

if len(sys.argv) == 1:
    print("No inputs given: " + str(USAGE.format(sys.argv[0])))
    sys.exit(2)
elif len(sys.argv) == 2:
    input_files = sys.argv[1]
    output_file = "out.root"
elif len(sys.argv) == 3:
    input_files = sys.argv[1]
    output_file = sys.argv[2]

files = glob.glob(input_files + "*.root")

if sys.version_info[0] == 3:
    files = [f.encode("utf-8") for f in files]
    output_file = str.encode(output_file)

num_cores = cpu_count()
skim_start = time.time()
with Pool(processes=num_cores) as pool:
    skimmed = pool.map(parallel_skim, (files))
skim_end = time.time()
print("Skim Time: {} Sec".format(skim_end - skim_start))


end = time.time()
print("Reduce: {} Sec".format(end - skim_end))
print("Total: {} Sec".format(end - skim_start))
